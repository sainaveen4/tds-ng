<!--

Purpose: This include file needs to be enabled in Content Management Environment.

It enables the components and features related to Experience Analytics client features.

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <experienceAnalytics>
      <client>
        <patch:attribute name="enabled" value="true"/>
        <logger type="Sitecore.ExperienceAnalytics.Core.Diagnostics.Logger, Sitecore.ExperienceAnalytics.Core" singleInstance="true"/>

        <services>
          <!-- AggregationSegmentReader is responsible for reading data from the Segments dimension table in RDB.
          -->
          <aggregationSegmentReader type="Sitecore.ExperienceAnalytics.Aggregation.Repositories.AggregationSegmentRemoteReader, Sitecore.ExperienceAnalytics.Aggregation" >
            <param type="Sitecore.ExperienceAnalytics.Client.ClientContainer, Sitecore.ExperienceAnalytics.Client" factoryMethod="GetLazyReportingDataProvider"/>
            <param desc="reportingDataSourceName">reporting</param>
            <param desc="logger" ref="experienceAnalytics/client/logger"/>
          </aggregationSegmentReader>

          <!-- SegmentReader is responsible for reading segment items from master database.
          -->
          <segmentReader type="Sitecore.ExperienceAnalytics.Client.Deployment.SegmentItemReader, Sitecore.ExperienceAnalytics.Client" >
            <param ref="experienceAnalytics/client/logger"/>
          </segmentReader>

          <!-- SiteDefinitionService is responsible for reading data from the SiteNames dimension table in RDB.
               The 'connectionStringName' parameter the name of the connection string of the RDB instance to connect to.
               Default: "reporting"
          -->
          <siteDefinitionService type="Sitecore.ExperienceAnalytics.Core.Repositories.SiteFilter.SiteDefinitionServiceFilterDecorator, Sitecore.ExperienceAnalytics.Core" >
            <param type="Sitecore.ExperienceAnalytics.Core.Repositories.DataProviderSiteDefinitionService, Sitecore.ExperienceAnalytics.Core" >
              <param type="Sitecore.ExperienceAnalytics.Client.ClientContainer, Sitecore.ExperienceAnalytics.Client" factoryMethod="GetLazyReportingDataProvider"/>
              <param desc="reportingDataSourceName">reporting</param>
            </param>
            <filters hint="list:AddFilter">
            </filters>
          </siteDefinitionService>

          <requestRedirection type="Sitecore.ExperienceAnalytics.Client.Pipelines.HttpRequest.RequestRedirection, Sitecore.ExperienceAnalytics.Client">
            <param type="Sitecore.ExperienceAnalytics.Core.Adapters.XDbSettingsAdapter, Sitecore.ExperienceAnalytics.Core"/>
            <param ref="experienceAnalytics/client/logger"/>
          </requestRedirection>

          <encoder type="Sitecore.ExperienceAnalytics.Api.Encoding.Hash64Encoder, Sitecore.ExperienceAnalytics.Api"/>
          <keyCodec type="Sitecore.ExperienceAnalytics.Api.Encoding.HashKeysCodec, Sitecore.ExperienceAnalytics.Api">
            <param desc="encoder" ref="experienceAnalytics/client/services/encoder"/>
            <param desc="decoder" type="Sitecore.ExperienceAnalytics.Api.Encoding.PresetsEnabledKeyDecoder, Sitecore.ExperienceAnalytics.Api">
              <param desc="hashMampping" type="Sitecore.ExperienceAnalytics.Api.Encoding.HashMapper, Sitecore.ExperienceAnalytics.Api">
                <param desc="keysProvider" type="Sitecore.ExperienceAnalytics.Api.Encoding.InMemoryPresetKeysProvider, Sitecore.ExperienceAnalytics.Api"/>
                <param desc="encoder" ref="experienceAnalytics/client/services/encoder"/>
              </param>
              <param desc="decoder" type="Sitecore.ExperienceAnalytics.Api.Encoding.DatabaseKeyDecoder, Sitecore.ExperienceAnalytics.Api">
                <param desc="keysReader" ref="experienceAnalytics/client/services/hashKeysProvider"/>
              </param>
            </param>
          </keyCodec>

          <!-- hashKeysProvider is responsible for hash of entities stored in database. -->
          <hashKeysProvider type="Sitecore.ExperienceAnalytics.Core.Repositories.CachedReaderDecorator`2[[System.String], [System.String]], Sitecore.ExperienceAnalytics.Core">
            <param type="Sitecore.ExperienceAnalytics.Core.Repositories.DimensionKeyRemoteReader, Sitecore.ExperienceAnalytics.Core" >
              <param type="Sitecore.ExperienceAnalytics.Client.ClientContainer, Sitecore.ExperienceAnalytics.Client" factoryMethod="GetLazyReportingDataProvider"/>
              <param desc="reportingDataSourceName">reporting</param>
              <param desc="logger" ref="experienceAnalytics/client/logger"/>
            </param>
            <param desc="cacheName">ExperienceAnalytics.DimensionKeys</param>
            <param desc="cacheMaxSize">52428800</param>
            <param desc="cacheExpiration">365:00:00:00</param>
            <param desc="useSlidingCacheExpiration">true</param>
            <param desc="logger" ref="experienceAnalytics/client/logger"/>
          </hashKeysProvider>
        </services>
      </client>
    </experienceAnalytics>
    <pipelines>
      <initialize>
        <!-- One-time run code that synchronizes a segment if it's workflow state is 'Deployed' but non-existent in db, with DeployDate = UTC.NOW 
        -->
        <processor type="Sitecore.ExperienceAnalytics.Client.Deployment.SyncSegmentsProcessor, Sitecore.ExperienceAnalytics.Client" patch:after="processor[position()=last()]" >
          <param ref="experienceAnalytics/client/logger"/>
          <param type="Sitecore.ExperienceAnalytics.Client.Deployment.SyncSegmentsManager, Sitecore.ExperienceAnalytics.Client" >
            <param ref="experienceAnalytics/client/logger"/>
            <param type="Sitecore.ExperienceAnalytics.Client.Deployment.DeploySegmentDefinitionProcessor, Sitecore.ExperienceAnalytics.Client">
              <param ref="experienceAnalytics/client/logger"/>
            </param>
          </param>
        </processor>
      </initialize>
      <deployDefinition>
        <processor type="Sitecore.ExperienceAnalytics.Client.Deployment.DeploySegmentDefinitionProcessor, Sitecore.ExperienceAnalytics.Client">
          <param ref="experienceAnalytics/client/logger"/>
        </processor>
      </deployDefinition>

      <httpRequestBegin>
        <processor type="Sitecore.ExperienceAnalytics.Client.Pipelines.HttpRequest.RedirectRequest, Sitecore.ExperienceAnalytics.Client" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" >
          <param ref="experienceAnalytics/client/services/requestRedirection"/>
        </processor>
      </httpRequestBegin>
    </pipelines>
    <settings>
      <!-- EXPERIENCE ANALYTICS - DEFAULT DATE RANGE OFFSET - FROM
           The default offset (in days) that is used in a date range filter for the 'from date'.
           Default value: -90
        -->
      <setting name="ExperienceAnalytics.DefaultDateRangeOffset.From" value="-90" />

      <!-- EXPERIENCE ANALYTICS - DEFAULT DATE RANGE OFFSET - TO
           The default offset (in days) that is used in a date range filter for the 'to date'.
           Default value: -1
        -->
      <setting name="ExperienceAnalytics.DefaultDateRangeOffset.To" value="-1" />
    </settings>
  </sitecore>
</configuration>