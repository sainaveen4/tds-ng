<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <settings>
      <!--  MVC: Flag for controlling data source nesting.
            Default: "true"
      -->
      <setting name="Mvc.AllowDataSourceNesting" value="true"/>

      <!--  MVC: Path to controller items.
            Default: "/sitecore/layout/controllers"
      -->
      <setting name="Mvc.ControllersPath" value="/sitecore/layout/controllers" />

      <!--  MVC: Flag to control whether or not rendering parameters should be decoded twice (Sitecore double-encodes them).
            Default: "true"
      -->
      <setting name="Mvc.DecodeRenderingParametersTwice" value="true" />

      <!--  MVC: Name of default action to invoke on a controller.
            Default: "Index"
      -->
      <setting name="Mvc.DefaultActionName" value="Index" />

      <!--  MVC: Name of default controller to invoke when handling form posts from renderings
            Default: "" (Means that renderings that contain empty Form Controller fields cannot handle form posts)
      -->
      <setting name="Mvc.DefaultFormControllerName" value="" />

      <!--  MVC: Default extension of view files.
            Default: "cshtml"
      -->
      <setting name="Mvc.DefaultViewExtension" value="cshtml" />

      <!--  MVC: Internal prefix used to filter out route keys that should be ignored.
            Default: "sc_ignore_"
      -->
      <setting name="Mvc.IgnoreKeyPrefix" value="sc_ignore_" />

      <!--  MVC: Pipe separated list of route URL's that are not valid for use with Sitecore.Mvc.
            For instance, the default ASP.NET route ({controller}/{action}/{id}) catches most requests
            that are actually meant to be handled by the default Sitecore route.
            Default: "{controller}/{action}/{id}"
      -->
      <setting name="Mvc.IllegalRoutes" value="|{controller}/{action}/{id}|" />

      <!--  MVC: Path to the model items.
            Default: "/sitecore/layout/models"
      -->
      <setting name="Mvc.ModelsPath" value="/sitecore/layout/models" />

      <!--  MVC: Flag for controlling whether Razor View Engine will look at physical view last modified dates 
            when determining to use a view file from a pre-compiled assembly or from the file system.
            Default: "false"
      -->
      <setting name="Mvc.UsePhysicalViewsIfNewer" value="false" />
      <!--  MVC: Path to the base file folder that contains the views used for item renderings.
            Default: "/views/renderers"
      -->
      <setting name="Mvc.RenderersViewFolder" value="/views/renderers" />

      <!--  MVC: Path to the rendering items.
            Default: "/sitecore/layout/renderings"
      -->
      <setting name="Mvc.RenderingsPath" value="/sitecore/layout/renderings" />

      <!--  MVC: Name of the default action to invoke in the Sitecore controller.
            Default: "Index"
      -->
      <setting name="Mvc.SitecoreActionName" value="Index" />

      <!--  MVC: The name of the Sitecore controller.
            Default: "Sitecore"
      -->
      <setting name="Mvc.SitecoreControllerName" value="Sitecore" />

      <!--  MVC: The name of the fall-through route handled by Sitecore.
            Default: "Sitecore"
      -->
      <setting name="Mvc.SitecoreRouteName" value="Sitecore" />

      <!--  MVC: Flag for controlling whether or not detailed error messages are shown when a controller cannot be found.
            Default: "true"
      -->
      <setting name="Mvc.DetailedErrorOnMissingController" value="true"/>

      <!--  MVC: Pipe separated list of the legal file extensions for views.
            Default: "|cshtml|"
      -->
      <setting name="Mvc.ViewExtensions" value="|cshtml|" />
      <!--  MVC: If the setting is true, the TransferMvcLayout processor will use the Legacy View Engine Transfer Logic, 
            otherwise - new one, which depends only on *.aspx extension.
            Default: "true"
      -->
      <setting name="Mvc.UseLegacyViewEngineTransferLogic" value="true" />

    </settings>

    <pipelines>

      <!-- Loader -->

      <initialize>
        <processor type="Sitecore.Mvc.Pipelines.Loader.InitializeAspNetMvc, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Loader.InitializeGlobalFilters, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Loader.InitializeDependencyResolver, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Loader.InitializeControllerFactory, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Loader.InitializeRoutes, Sitecore.Mvc"/>
      </initialize>

      <!-- Http Request Begin -->

      <httpRequestBegin>
        <processor type="Sitecore.Mvc.Pipelines.HttpRequest.DisplayFatalErrors, Sitecore.Mvc" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.IgnoreList, Sitecore.Kernel']" />
        <processor type="Sitecore.Mvc.Pipelines.HttpRequest.TransferRoutedRequest, Sitecore.Mvc" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
        <processor type="Sitecore.Mvc.Pipelines.HttpRequest.TransferControllerRequest, Sitecore.Mvc" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.LayoutResolver, Sitecore.Kernel']" />
        <processor type="Sitecore.Mvc.Pipelines.HttpRequest.TransferMvcLayout, Sitecore.Mvc" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.LayoutResolver, Sitecore.Kernel']" />
      </httpRequestBegin>

      <!-- Mvc Events -->

      <mvc.actionExecuting>
      </mvc.actionExecuting>

      <mvc.actionExecuted>
      </mvc.actionExecuted>

      <mvc.exception>
        <processor type="Sitecore.Mvc.Pipelines.MvcEvents.Exception.ShowAspNetErrorMessage, Sitecore.Mvc"/>
      </mvc.exception>

      <mvc.resultExecuting>
      </mvc.resultExecuting>

      <mvc.resultExecuted>
      </mvc.resultExecuted>

      <!-- Mvc Request -->

      <mvc.requestBegin>
        <processor type="Sitecore.Mvc.Pipelines.Request.RequestBegin.SetupPageContext, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Request.RequestBegin.ExecuteFormHandler, Sitecore.Mvc"/>
      </mvc.requestBegin>

      <mvc.requestEnd>
      </mvc.requestEnd>

      <mvc.createController>
        <processor type="Sitecore.Mvc.Pipelines.Request.CreateController.CreateItemController, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Request.CreateController.CreateDefaultController, Sitecore.Mvc"/>
      </mvc.createController>

      <mvc.getModel>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromItem, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromProperty, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromLayout, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromRenderingItem, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetModel.CreateDefaultRenderingModel, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetModel.InitializeModel, Sitecore.Mvc"/>
      </mvc.getModel>

      <!-- Mvc Response -->

      <mvc.getPageItem>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.SetLanguage, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.GetFromRouteValue, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.GetFromRouteUrl, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.GetFromOldContext, Sitecore.Mvc"/>
      </mvc.getPageItem>

      <mvc.buildPageDefinition>
        <processor type="Sitecore.Mvc.Pipelines.Response.BuildPageDefinition.CreatePageDefinitionInstance, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.BuildPageDefinition.ProcessXmlBasedLayoutDefinition, Sitecore.Mvc"/>
      </mvc.buildPageDefinition>

      <mvc.getPageRendering>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetPageRendering.GetLayoutRendering, Sitecore.Mvc"/>
      </mvc.getPageRendering>

      <mvc.getXmlBasedLayoutDefinition>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetXmlBasedLayoutDefinition.GetFromLayoutField, Sitecore.Mvc"/>
      </mvc.getXmlBasedLayoutDefinition>

      <mvc.renderPlaceholder>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.InitializeProfiling, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.EnterPlaceholderContext, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.PerformRendering, Sitecore.Mvc"/>
      </mvc.renderPlaceholder>

      <mvc.renderRendering>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.InitializeProfiling, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.StartStatisticRecording, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ResolveArea, Sitecore.Mvc">
          <param desc="areaResolver" type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ChainedAreaResolveStrategy, Sitecore.Mvc">
            <Resolvers hint="list">
              <resolver type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderingDefinitionAreaResolveStrategy, Sitecore.Mvc"/>
              <resolver type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderingParametersAreaResolveStrategy, Sitecore.Mvc"/>
              <resolver type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderingLayoutAreaResolveStrategy, Sitecore.Mvc"/>
            </Resolvers>
          </param>
        </processor>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.SetCacheability, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.GenerateCacheKey, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderFromCache, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.StartRecordingOutput, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.EnterRenderingContext, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ExecuteRenderer, Sitecore.Mvc">
          <param desc="rendererErrorHandler" type="Sitecore.Mvc.Pipelines.Response.RenderRendering.HttpExceptionWrappingRendererErrorStrategy, Sitecore.Mvc">
            <param desc="rendererErrorHandler" type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ChainedRendererErrorStrategy, Sitecore.Mvc">
              <Handlers hint="list">
                <handler type="Sitecore.Mvc.Pipelines.Response.RenderRendering.PageModeRenderingErrorStrategy, Sitecore.Mvc"/>
              </Handlers>
            </param>
          </param>
        </processor>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.AddRecordedHtmlToCache, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RecordStatistic, Sitecore.Mvc"/>
      </mvc.renderRendering>

      <mvc.getRenderer>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetViewRenderer, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetItemRenderer, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetXsltRenderer, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetControllerRenderer, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetMethodRenderer, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetUrlRenderer, Sitecore.Mvc"/>
        <processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetDefaultRenderer, Sitecore.Mvc"/>
      </mvc.getRenderer>

    </pipelines>

    <mvc>
      <areas>
        <!-- MVC: Sitecore will by default register all areas in the initialize pipeline.
                  Use the below list to specify areas that should not be registered in the initialize pipeline.
        -->
        <excludedAreas>
          <area type="Sitecore.Social.Client.Mvc.Areas.Social.SocialAreaRegistration, Sitecore.Social.Client.Mvc" />
        </excludedAreas>
      </areas>

      <configurationAssemblies type="Sitecore.Mvc.Configuration.ExcludedAssembliesConfiguration, Sitecore.Mvc">
        <excludedAssemblies hint="list">
          <!-- 
            The Blacklist
            
            This section defines a list of assembly name matches to filter out any assemblies
            that are not required by the IAssemmblyResolver. Assembly names that start with a 
            name within the excludedAssemblies will not be returned in the results from
            IAssembleResolver.GetAssemblies()
            
            -->
          <excludedAssembly id="Antlr3.Runtime">Antlr3.Runtime</excludedAssembly>
          <excludedAssembly id="Castle">Castle</excludedAssembly>
          <excludedAssembly id="ComponentArt">ComponentArt</excludedAssembly>
          <excludedAssembly id="CsQuery">CsQuery</excludedAssembly>
          <excludedAssembly id="CustomFields">CustomFields</excludedAssembly>
          <excludedAssembly id="DotNetOpenAuth">DotNetOpenAuth</excludedAssembly>
          <excludedAssembly id="EcmaScript.NET">EcmaScript.NET</excludedAssembly>
          <excludedAssembly id="Facebook">Facebook</excludedAssembly>
          <excludedAssembly id="Google.Apis">Google.Apis</excludedAssembly>
          <excludedAssembly id="Hammock.ClientProfile">Hammock.ClientProfile</excludedAssembly>
          <excludedAssembly id="HtmlAgilityPack">HtmlAgilityPack</excludedAssembly>
          <excludedAssembly id="Iesi.Collections">Iesi.Collections</excludedAssembly>
          <excludedAssembly id="ICSharpCode.SharpZipLib">ICSharpCode.SharpZipLib</excludedAssembly>
          <excludedAssembly id="ITHit.WebDAV.">ITHit.WebDAV.</excludedAssembly>
          <excludedAssembly id="LogService">LogService</excludedAssembly>
          <excludedAssembly id="Lucene">Lucene</excludedAssembly>
          <excludedAssembly id="MarkdownSharp">MarkdownSharp</excludedAssembly>
          <excludedAssembly id="Microsoft.">Microsoft.</excludedAssembly>
          <excludedAssembly id="mscorlib">mscorlib</excludedAssembly>
          <excludedAssembly id="MongoDB.">MongoDB.</excludedAssembly>
          <excludedAssembly id="Mvp.Xml">Mvp.Xml</excludedAssembly>
          <excludedAssembly id="Netbiscuits">Netbiscuits</excludedAssembly>
          <excludedAssembly id="Newtonsoft.Json">Newtonsoft.Json</excludedAssembly>
          <excludedAssembly id="Ninject">Ninject</excludedAssembly>
          <excludedAssembly id="OAuthLinkedIn">OAuthLinkedIn</excludedAssembly>
          <excludedAssembly id="protobuf-net">protobuf-net</excludedAssembly>
          <excludedAssembly id="RadEditor.Net2">RadEditor.Net2</excludedAssembly>
          <excludedAssembly id="RazorGenerator.Mvc">RazorGenerator.Mvc</excludedAssembly>
          <excludedAssembly id="Sitecore.Analytics">Sitecore.Analytics</excludedAssembly>
          <excludedAssembly id="Sitecore.Apps">Sitecore.Apps</excludedAssembly>
          <excludedAssembly id="Sitecore.CES">Sitecore.CES</excludedAssembly>
          <excludedAssembly id="Sitecore.Cloud">Sitecore.Cloud</excludedAssembly>
          <excludedAssembly id="Sitecore.Oracle">Sitecore.Oracle</excludedAssembly>
          <excludedAssembly id="Sitecore.SegmentBuilder">Sitecore.SegmentBuilder</excludedAssembly>
          <excludedAssembly id="Sitecore.SessionProvider">Sitecore.SessionProvider</excludedAssembly>
          <excludedAssembly id="Sitecore.Update">Sitecore.Update</excludedAssembly>
          <excludedAssembly id="Sitecore.Xdb">Sitecore.Xdb</excludedAssembly>
          <excludedAssembly id="SMDiagnostics">SMDiagnostics</excludedAssembly>
          <excludedAssembly id="SolrNet">SolrNet</excludedAssembly>
          <excludedAssembly id="Stimulsoft">Stimulsoft</excludedAssembly>
          <excludedAssembly id="System.Data">System.Data</excludedAssembly>
          <excludedAssembly id="System.Drawing">System.Drawing</excludedAssembly>
          <excludedAssembly id="System.EnterpriseServices">System.EnterpriseServices</excludedAssembly>
          <excludedAssembly id="System.IdentityModel">System.IdentityModel</excludedAssembly>
          <excludedAssembly id="System.Net">System.Net</excludedAssembly>
          <excludedAssembly id="System.Runtime.Serialization">System.Runtime.Serialization</excludedAssembly>
          <excludedAssembly id="System.ServiceModel">System.ServiceModel</excludedAssembly>
          <excludedAssembly id="System.Web.WebPages">System.Web.WebPages</excludedAssembly>
          <excludedAssembly id="System.Xml">System.Xml</excludedAssembly>
          <excludedAssembly id="System.Web.Optimization">System.Web.Optimization</excludedAssembly>
          <excludedAssembly id="System.Web.Razor">System.Web.Razor</excludedAssembly>
          <excludedAssembly id="System.Web.Routing">System.Web.Routing</excludedAssembly>
          <excludedAssembly id="System.Web.Services">System.Web.Services</excludedAssembly>
          <excludedAssembly id="System.WorkflowServices">System.WorkflowServices</excludedAssembly>
          <excludedAssembly id="Telerik">Telerik</excludedAssembly>
          <excludedAssembly id="TweetSharp">TweetSharp</excludedAssembly>
          <excludedAssembly id="WebGrease">WebGrease</excludedAssembly>
          <excludedAssembly id="WindowsBase">WindowsBase</excludedAssembly>
          <excludedAssembly id="Yahoo.Yui.Compressor">Yahoo.Yui.Compressor</excludedAssembly>
        </excludedAssemblies>
        
        <!-- The Whitelist -->
        <includedAssemblies hint="list">
          <includedAssembly id="Sitecore.Mvc">Sitecore.Mvc</includedAssembly>
          <includedAssembly id="System.Web.Mvc">System.Web.Mvc</includedAssembly>
        </includedAssemblies>
      </configurationAssemblies>

      <precompilation>
        <!--MVC: Sitecore will load an assemblyIdentity assemblies and use the precompiled 
                 razor views that they contain in MVC view resolution.
        -->
        <assemblies>
          <assemblyIdentity name="Sitecore.Mvc" />
        </assemblies>
      </precompilation>
    </mvc>
  </sitecore>
</configuration>
