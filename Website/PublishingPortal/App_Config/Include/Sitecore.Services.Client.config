<?xml version="1.0" encoding="utf-8" ?>
<!--

Purpose: This include file configures the Sitecore.Services.Client service layer. The service layer allows you to create consistent
client-server communication for your applications, using the .NET Web API as the foundation.
    
Important: Changing the settings in this file may impact the security of your Sitecore installation. Please consider any changes carefully
before implementing them on a production server. If you change the SecurityPolicy setting or the settings related to anonymous users, you
may allow third parties to access content directly on your server without any security restrictions.
    
Please consult your Sitecore partner before making any changes to the settings in this file.
    
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <settings>
      <!--  SITECORE SERVICES SECURITY POLICY
            Specifies the Sitecore.Services.Infrastructure.Web.Http.Security.IAuthorizePolicy derived type that will set the security policy 
            for the Sitecore services.
            
            Policies:
            
            Sitecore.Services.Infrastructure.Web.Http.Security.ServicesOffPolicy, Sitecore.Services.Infrastructure
            - Policy denies access to all Entity and Item Services
            
            Sitecore.Services.Infrastructure.Web.Http.Security.ServicesLocalOnlyPolicy, Sitecore.Services.Infrastructure
            - Policy denies access to all Entity and Item Services from requests originating from remote clients
            
            Sitecore.Services.Infrastructure.Web.Http.Security.ServicesOnPolicy, Sitecore.Services.Infrastructure
            - Policy allows access to all Entity and Item Services

            Default: Sitecore.Services.Infrastructure.Web.Http.Security.ServicesLocalOnlyPolicy, Sitecore.Services.Infrastructure      
      -->
      <setting name="Sitecore.Services.SecurityPolicy" value="Sitecore.Services.Infrastructure.Web.Http.Security.ServicesLocalOnlyPolicy, Sitecore.Services.Infrastructure" />

      <!--  SITECORE SERVICES ROUTE MAPPER
            Specifies the Sitecore.Services.Infrastructure.Web.Http.IMapRoutes derived type that will configure routes 
            for the Sitecore services

            Default: Sitecore.Services.Infrastructure.Web.Http.DefaultRouteMapper, Sitecore.Services.Infrastructure    
      -->
      <setting name="Sitecore.Services.RouteMapper" value="Sitecore.Services.Infrastructure.Web.Http.DefaultRouteMapper, Sitecore.Services.Infrastructure" />

      <!--  SITECORE SERVICES FALLBACK HTTP CONTROLLER SELECTOR" 
            Specifies the System.Web.Http.Dispatcher.IHttpControllerSelector derived type that will be used to fallback
            to if the Sitecore.Services.Infrastructure.Web.Http.Dispatcher.NamespeceControllerSelector fails to locate a
            controller to handle an incoming routed request.
            
            Default: System.Web.Http.Dispatcher.DefaultHttpControllerSelector, System.Web.Http    
      -->
      <setting name="Sitecore.Services.FallbackHttpControllerSelector" value="System.Web.Http.Dispatcher.DefaultHttpControllerSelector, System.Web.Http" />
        
      <!--  SITECORE SERVICES ASSEMBLIES RESOLVER" 
            Specifies the System.Web.Http.Dispatcher.IAssembliesResolver, derived type that will be used manage the list of 
            assemblies available for the application.
            
            Default: Sitecore.Services.Infrastructure.Web.Http.Dispatcher.FilteredAssembliesResolver, Sitecore.Services.Infrastructure    
      -->
      <setting name="Sitecore.Services.AssembliesResolver" value="Sitecore.Services.Infrastructure.Web.Http.Dispatcher.FilteredAssembliesResolver, Sitecore.Services.Infrastructure" />        

      <!--  SITECORE EXTENSION VALIDATION FOLDERPATH
            Specifies the folder in which to locate javascript validator extensions
            
            Default: /sitecore/shell/client/Services/Assets/lib/extensions/validators      
      -->
      <setting name="Sitecore.Extensions.Validation.FolderPath" value="/sitecore/shell/client/Services/Assets/lib/extensions/validators" />

      <!--  SITECORE SERVICES ALLOW ANONYMOUS USER
            Specifies whether anonymous users will be permitted to access the Sitecore Item Web API services
            Default: false      
      -->
      <setting name="Sitecore.Services.AllowAnonymousUser" value="false" />

      <!--  SITECORE SERVICES ANONYMOUS USER
            Specifies the user to impersonate if a request from an anonymous user is permitted to 
            access the Sitecore Item Web API services
            Default: sitecore\ServicesAPI      
      -->
      <setting name="Sitecore.Services.AnonymousUser" value="sitecore\ServicesAPI" />

      <!--  SITECORE SERVICES TOKEN AUTHORIZATION
            Specifies if enabled Authorization Tokens are enabled or not. 
            The setting Sitecore.Services.Token.SecurityKey is needed in ConnectionString.config.
            Example: <add name="Sitecore.Services.Token.SecurityKey" connectionString="key=GHUwnYMxb75Td25yqyVdQQ8QQ8RzBG6T" />
            Default: false.
      -->
      <setting name="Sitecore.Services.Token.Authorization.Enabled" value="false" />

      <!--  SITECORE SERVICES TOKEN AUTHORIZATION TIMEOUT
            Specifies the authorization timeout in minutes.
            Default: 20
      -->
      <setting name="Sitecore.Services.Token.Authorization.Timeout" value="20" />
    </settings>

    <pipelines>
      <initialize>
        <processor type="Sitecore.Services.Infrastructure.Sitecore.Pipelines.ServicesWebApiInitializer, Sitecore.Services.Infrastructure.Sitecore"
                   patch:after="processor[@type='Sitecore.Mvc.Pipelines.Loader.InitializeRoutes, Sitecore.Mvc']" />
      </initialize>
    </pipelines>
    
    <!-- SITECORE SERVICES WEB API CONFIGURATION 
         Specifies the list of Web API filters, allowed controllers and unhandled exception loggers to load for request handling
    -->
    <api>
      <services>
        <configuration type="Sitecore.Services.Infrastructure.Configuration.ServicesConfiguration, Sitecore.Services.Infrastructure">
          <excludedAssemblies hint="list:AddExcludedAssembly">
            <!-- 
            
            This section defines a list of assembly name matches to filter out any assemblies
            that are not required by the IAssemmblyResolver. Assembly names that start with a 
            name within the excludedAssemblies will not be returned in the results from
            IAssembleResolver.GetAssemblies()
            
            -->

            <excludedAssembly id="Antlr3.Runtime">Antlr3.Runtime</excludedAssembly>
            <excludedAssembly id="Castle">Castle</excludedAssembly>
            <excludedAssembly id="ComponentArt">ComponentArt</excludedAssembly>
            <excludedAssembly id="CsQuery">CsQuery</excludedAssembly>
            <excludedAssembly id="CustomFields">CustomFields</excludedAssembly>
            <excludedAssembly id="DotNetOpenAuth">DotNetOpenAuth</excludedAssembly>
            <excludedAssembly id="EcmaScript.NET">EcmaScript.NET</excludedAssembly>
            <excludedAssembly id="Facebook">Facebook</excludedAssembly>
            <excludedAssembly id="Google.Apis">Google.Apis</excludedAssembly>
            <excludedAssembly id="Hammock.ClientProfile">Hammock.ClientProfile</excludedAssembly>
            <excludedAssembly id="HtmlAgilityPack">HtmlAgilityPack</excludedAssembly>
            <excludedAssembly id="Iesi.Collections">Iesi.Collections</excludedAssembly>
            <excludedAssembly id="ICSharpCode.SharpZipLib">ICSharpCode.SharpZipLib</excludedAssembly>
            <excludedAssembly id="ITHit.WebDAV.">ITHit.WebDAV.</excludedAssembly>
            <excludedAssembly id="LogService">LogService</excludedAssembly>
            <excludedAssembly id="Lucene">Lucene</excludedAssembly>
            <excludedAssembly id="MarkdownSharp">MarkdownSharp</excludedAssembly>
            <excludedAssembly id="Microsoft.">Microsoft.</excludedAssembly>
            <excludedAssembly id="mscorlib">mscorlib</excludedAssembly>
            <excludedAssembly id="MongoDB.">MongoDB.</excludedAssembly>
            <excludedAssembly id="Mvp.Xml">Mvp.Xml</excludedAssembly>
            <excludedAssembly id="Netbiscuits">Netbiscuits</excludedAssembly>
            <excludedAssembly id="Newtonsoft.Json">Newtonsoft.Json</excludedAssembly>
            <excludedAssembly id="Ninject">Ninject</excludedAssembly>
            <excludedAssembly id="OAuthLinkedIn">OAuthLinkedIn</excludedAssembly>
            <excludedAssembly id="protobuf-net">protobuf-net</excludedAssembly>
            <excludedAssembly id="RadEditor.Net2">RadEditor.Net2</excludedAssembly>
            <excludedAssembly id="RazorGenerator.Mvc">RazorGenerator.Mvc</excludedAssembly>
            <excludedAssembly id="SMDiagnostics">SMDiagnostics</excludedAssembly>
            <excludedAssembly id="Stimulsoft">Stimulsoft</excludedAssembly>
            <excludedAssembly id="System.Data">System.Data</excludedAssembly>
            <excludedAssembly id="System.Drawing">System.Drawing</excludedAssembly>
            <excludedAssembly id="System.EnterpriseServices">System.EnterpriseServices</excludedAssembly>
            <excludedAssembly id="System.IdentityModel">System.IdentityModel</excludedAssembly>
            <excludedAssembly id="System.Net">System.Net</excludedAssembly>
            <excludedAssembly id="System.Runtime.Serialization">System.Runtime.Serialization</excludedAssembly>
            <excludedAssembly id="System.ServiceModel">System.ServiceModel</excludedAssembly>
            <excludedAssembly id="System.Web.WebPages">System.Web.WebPages</excludedAssembly>
            <excludedAssembly id="System.Xml">System.Xml</excludedAssembly>
            <excludedAssembly id="System.Web.Optimization">System.Web.Optimization</excludedAssembly>
            <excludedAssembly id="System.Web.Razor">System.Web.Razor</excludedAssembly>
            <excludedAssembly id="System.Web.Routing">System.Web.Routing</excludedAssembly>
            <excludedAssembly id="System.Web.Services">System.Web.Services</excludedAssembly>
            <excludedAssembly id="System.WorkflowServices">System.WorkflowServices</excludedAssembly>
            <excludedAssembly id="Telerik">Telerik</excludedAssembly>
            <excludedAssembly id="TweetSharp">TweetSharp</excludedAssembly>
            <excludedAssembly id="WebGrease">WebGrease</excludedAssembly>
            <excludedAssembly id="WindowsBase">WindowsBase</excludedAssembly>
            <excludedAssembly id="Yahoo.Yui.Compressor">Yahoo.Yui.Compressor</excludedAssembly>

          </excludedAssemblies>

          <filters hint="list:AddFilter">
            <filter desc="AnonymousUserFilter">Sitecore.Services.Infrastructure.Web.Http.Filters.AnonymousUserFilter, Sitecore.Services.Infrastructure</filter>
            <filter desc="SecurityPolicyAuthorisationFilter">Sitecore.Services.Infrastructure.Web.Http.Filters.SecurityPolicyAuthorisationFilter, Sitecore.Services.Infrastructure</filter>
            <!-- 
            
            Decomment this section to mandate HTTPS for all Web API requests to the site
            
            <filter desc="RequireHttpsFilter">Sitecore.Services.Infrastructure.Web.Http.Filters.RequireHttpsFilter, Sitecore.Services.Infrastructure</filter>
            
            -->
          </filters>

          <delegatingHandlers hint="list:AddDelegatingHandler">
            <delegatingHandler desc="TokenDelegatingHandler">Sitecore.Services.Infrastructure.Sitecore.Security.TokenDelegatingHandler, Sitecore.Services.Infrastructure.Sitecore</delegatingHandler>
          </delegatingHandlers>

          <allowedControllers hint="list:AddController">
            <!-- 
            
            Add allowedController elements here for any controllers that should be exempt 
            from the Sitecore Services Security Policy
            
            <allowedController desc="description">...</allowedController>
            
            -->
          </allowedControllers>
          <exceptionLoggers hint="list:AddLogger">
            <exceptionLogger desc="SitecoreExceptionLogger">Sitecore.Services.Infrastructure.Web.Http.ExceptionHandling.SitecoreExceptionLogger, Sitecore.Services.Infrastructure</exceptionLogger>
          </exceptionLoggers>
        </configuration>
      </services>
    </api>

    <services>
        <configurator type= "Sitecore.Services.Infrastructure.Sitecore.DependencyInjection.ComponentServicesConfigurator, Sitecore.Services.Infrastructure.Sitecore"/>
    </services>

  </sitecore>
</configuration>